name: Lint & Test
on:
  schedule:
    - cron: "0 0 * * *"
  pull_request:
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist
      - name: Run PHP Lint
        run: composer phpcs
  wporg-validation:
    name: WP.org Plugin Validation
    runs-on: ubuntu-latest
    steps:
      - uses: pantheon-systems/action-wporg-validator@1.0.0
        with:
          type: 'plugin'
  validate-readme-spacing:
    name: Validate README Spacing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: pantheon-systems/validate-readme-spacing@v1
  php8-compatibility:
    name: PHP 8.x Compatibility
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: PHP Compatibility
        uses: pantheon-systems/phpcompatibility-action@dev
        with:
          test-versions: 8.0-
          paths: ${{ github.workspace }}/*.php ${{ github.workspace }}/inc/*.php
  test-phpunit-74:
    needs: lint
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:10.5
    name: PHP 7.4 Unit Tests
    steps:
      - uses: actions/checkout@v5
      - name: Setup PHP 7.4
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: mysqli, zip, imagick
      - name: Start MySQL Service
        run: sudo systemctl start mysql
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/vendor
          key: test-phpunit-dependencies-${{ hashFiles('composer.json') }}
          restore-keys: test-phpunit-dependencies-${{ hashFiles('composer.json') }}
      - name: Setup WP-CLI
        uses: godaddy-wordpress/setup-wp-cli@1
      - name: Install Composer dependencies
        run: |
          composer update
          composer install
          chmod +x bin/*.sh
      - name: Run PHP linting
        run: composer phplint
      - name: Reset MariaDB root password to empty
        run: |
          until mysqladmin ping -h127.0.0.1 -uroot -proot --silent; do
            sleep 1
          done
          mysql -h127.0.0.1 -uroot -proot <<'SQL'
            ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY '';
            ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '';
            FLUSH PRIVILEGES;
          mysqladmin ping -h127.0.0.1 -uroot --silent
      - name: Install WPUnit tests
        run: composer test:install:withdb
      - name: Run PHPUnit
        run: composer phpunit
  test-phpunit-84:
    needs: lint
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:10.6
    name: PHP 8.4 Unit Tests
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP 8.4
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: mysqli, zip, imagick
      - name: Start MySQL Service
        run: sudo systemctl start mysql
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/vendor
          key: test-phpunit-dependencies-${{ hashFiles('composer.json') }}
          restore-keys: test-phpunit-dependencies-${{ hashFiles('composer.json') }}
      - name: Setup WP-CLI
        uses: godaddy-wordpress/setup-wp-cli@1
      - name: Install Composer dependencies
        run: |
          composer install
          chmod +x bin/*.sh
      - name: Run PHP linting
        run: composer phplint
      - name: Reset MariaDB root password to empty
        run: |
          until mysqladmin ping -h127.0.0.1 -uroot -proot --silent; do
            sleep 1
          done
          mysql -h127.0.0.1 -uroot -proot <<'SQL'
            ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY '';
            ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '';
            FLUSH PRIVILEGES;
          mysqladmin ping -h127.0.0.1 -uroot --silent
      - name: Install WPUnit tests
        run: composer test:install:withdb
      - name: Run PHPUnit
        run: composer phpunit
