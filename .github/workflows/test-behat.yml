name: Test Behat CI

on:
  push:
  pull_request:
  workflow_dispatch:
  # Nightly at 00:00 UTC (CircleCI: "0 0 * * *")
  schedule:
    - cron: "0 0 * * *"

jobs:
  test-behat:
    # Skip scheduled runs unless the workflow file is on a branch named 'release'
    if: github.event_name != 'schedule' || github.ref_name == 'release'
    runs-on: ubuntu-latest

#    # Run all steps inside the CircleCI-equivalent container
    container:
      image: quay.io/pantheon-public/build-tools-ci:8.x-php8.2
      options: --user root

    defaults:
      run:
        shell: bash

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/vendor
          key: test-lint-dependencies-{{ checksum "composer.json" }}
          restore-keys: test-lint-dependencies-{{ checksum "composer.json" }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: composer install -n --prefer-dist

      - name: Run PHP Lint
        run: composer phpcs

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/vendor
          key: test-behat-dependencies-{{ checksum "composer.json" }}
          restore-keys: test-behat-dependencies-{{ checksum "composer.json" }}

      - name: Generate WP admin password
        run: echo "$(openssl rand -hex 8)" > /tmp/WORDPRESS_ADMIN_PASSWORD

      - name: Export environment (CircleCI -> GHA equivalents)
        run: |
          echo "TERMINUS_ENV=ci-${GITHUB_RUN_NUMBER}" >> "$GITHUB_ENV"
          echo "TERMINUS_SITE=wp-redis" >> "$GITHUB_ENV"
          echo "SITE_ENV=wp-redis.ci-${GITHUB_RUN_NUMBER}" >> "$GITHUB_ENV"
          echo "WORDPRESS_ADMIN_USERNAME=pantheon" >> "$GITHUB_ENV"
          echo "WORDPRESS_ADMIN_EMAIL=no-reply@getpantheon.com" >> "$GITHUB_ENV"
          echo "WORDPRESS_ADMIN_PASSWORD=$(cat /tmp/WORDPRESS_ADMIN_PASSWORD)" >> "$GITHUB_ENV"

      - name: Disable StrictHostKeyChecking
        run: |
          mkdir -p "$HOME/.ssh"
          echo "StrictHostKeyChecking no" >> "$HOME/.ssh/config"

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SITE_OWNER_SSH_PRIVATE_KEY }}

      - name: Configure Composer GitHub OAuth (optional)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -z "${GITHUB_TOKEN}" ]; then
            echo "GITHUB_TOKEN missing; assuming unauthenticated build"; exit 0
          fi
          { composer config -g github-oauth.github.com "${GITHUB_TOKEN}"; } &>/dev/null

      - name: Terminus login (optional)
        env:
          TERMINUS_TOKEN: ${{ secrets.TERMINUS_TOKEN }}
        run: |
          if [ -z "${TERMINUS_TOKEN}" ]; then
            echo "TERMINUS_TOKEN missing; assuming unauthenticated build"; exit 0
          fi
          terminus auth:login --machine-token="${TERMINUS_TOKEN}"

      - name: Validate fixture version
        run: ./bin/validate-fixture-version.sh

      - name: Behat prepare
        run: ./bin/behat-prepare.sh

      - name: Behat tests (strict)
        run: ./bin/behat-test.sh --strict

      - name: Behat cleanup (always)
        if: always()
        run: ./bin/behat-cleanup.sh
